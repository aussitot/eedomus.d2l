<?php

error_reporting(E_ALL);
ini_set("display_errors", 1);

/**
   * phpD2lAPI
   *
   * class php pour D2l (ERL WiFi pour compteur Linky)
   * API Documentation : https://consospyapi.sicame.io/swagger/index.html
   *
   * @author twitter:@havok
   * @version 2019.06.03
   *
   */

   class D2l {

     public $version = '0.1';
     public $error = null;

     //authentication:
     private $_login;
     private $_password;
     private $_isAuth = false;

     private $_APILoginUrl = 'https://consospyapi.sicame.io/api';
     private $_APIHost = 'sicame.io';

     private $_numModule;
     private $_idModule;
     private $_APIKey;
     private $_APIExpirationDate;

     private function _auth()
     {
       /* Connexion */
       // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
       $ch = curl_init();

       curl_setopt($ch, CURLOPT_URL, $this->_APILoginUrl.'/D2L/Security/GetAPIKey');
       curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
       curl_setopt($ch, CURLOPT_POSTFIELDS, "{ \"login\": \"$this->_login\", \"password\": \"$this->_password\"}");
       curl_setopt($ch, CURLOPT_POST, 1);

       $headers = array();
       $headers[] = 'Accept: application/json';
       $headers[] = 'Content-Type: application/json';
       curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

       $result = curl_exec($ch);
       $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);

       if ($httpCode != 200) {
         $this->error = "Return code is {$httpCode} \n".curl_error($ch);
         return false;
       }
       curl_close ($ch);

       $params = null;
       $params = json_decode($result, true);

       $this->_APIKey = $params['apiKey'];
       $this->_APIExpirationDate = $params['validTo'];
       //$this->_networkId = key($params['networks']);

       $this->_isAuth = true;
       return true;
     }

     private function _getD2lIds()
     {
       //Provide a list of all D2L modules accessible for one client (authentication by APIKey)
      // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
      $ch = curl_init();

      curl_setopt($ch, CURLOPT_URL, $this->_APILoginUrl.'/D2L/D2Ls');
      curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
      curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'GET');


      $headers = array();
      $headers[] = 'Accept: application/json';
      $headers[] = 'APIKey: '.$this->_APIKey;

      curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

      $result = curl_exec($ch);
      $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);

      if ($httpCode != 200) {
        $this->error = "Return code is {$httpCode} \n".curl_error($ch);
        return false;
      }
      curl_close ($ch);

      $params = null;
      $params = json_decode($result, true);
      $this->_idModule = $params[$this->_numModule]["idModule"];
      return true;

     }

     function getLastIndexes()
     {
       //Get last indexes retreived by a specific D2L
       $ch = curl_init();

       curl_setopt($ch, CURLOPT_URL, $this->_APILoginUrl.'/D2L/D2Ls/'.$this->_idModule.'/LastIndexes');
       curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
       curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'GET');

       $headers = array();
       $headers[] = 'Accept: application/json';
       $headers[] = 'APIKey: '.$this->_APIKey;

       curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

       $result = curl_exec($ch);
       $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);

       if ($httpCode != 200) {
         $this->error = "Return code is {$httpCode} \n".curl_error($ch);
         return false;
       }
       curl_close ($ch);

       $params = null;
       $params = json_decode($result, true);
       return $params;

     }

     function getIndexesBetween($dateFrom, $dateTo)
     {
       //Get indexes retreived by a specific D2L between two dates
       $ch = curl_init();
echo $this->_APILoginUrl.'/D2L/D2Ls/'.$this->_idModule.'/IndexesBetween?from='.$dateFrom.'&to='.$dateTo;
       curl_setopt($ch, CURLOPT_URL, $this->_APILoginUrl.'/D2L/D2Ls/'.$this->_idModule.'/IndexesBetween?from='.$dateFrom.'&to='.$dateTo);
       curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
       curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'GET');

       $headers = array();
       $headers[] = 'Accept: application/json';
       $headers[] = 'APIKey: '.$this->_APIKey;

       curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

       $result = curl_exec($ch);
       $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);

       if ($httpCode != 200) {
         $this->error = "Return code is {$httpCode} \n".curl_error($ch);
         return false;
       }
       curl_close ($ch);

       $params = null;
       $params = json_decode($result, true);
       return $params;

     }

     function __construct($login, $password, $numModule = 1)
     {
         $this->_login = $login;
         $this->_password = $password;
         $this->_numModule = $numModule-1;

         if ($this->_auth())
          {
            $this->_getD2lIds();
          }
     }

   }
?>
